{
  "moduleFormat": "endoZipBase64",
  "endoZipBase64": "",
  "endoZipBase64Sha512": "3d529cedd24548b7324ee87e1192fa58496932f8187d36545f7bf67d63d3105376492893ff93a8c573a3a641f9fe15f0a39ae07367982e4e6fc461de1f854b2c"
}