{"ast":null,"code":"// @ts-check\n/// <reference types=\"ses\" />\n\n/**\n * @template T\n * @typedef {import('.').EHandler<T>} EHandler\n */\n\n/**\n * Create a simple postponedHandler that just postpones until donePostponing is\n * called.\n *\n * @param {import('.').HandledPromiseConstructor} HandledPromise\n * @returns {[Required<EHandler<any>>, () => void]} A pair consisting of the\n * postponedHandler and donePostponing callback.\n */\nexport const makePostponedHandler = HandledPromise => {\n  let donePostponing;\n  const interlockP = new Promise(resolve => {\n    donePostponing = () => resolve(undefined);\n  });\n\n  const makePostponedOperation = postponedOperation => {\n    // Just wait until the handler is resolved/rejected.\n    return function postpone(x) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      // console.log(`forwarding ${postponedOperation} ${args[0]}`);\n      return new HandledPromise((resolve, reject) => {\n        interlockP.then(_ => {\n          resolve(HandledPromise[postponedOperation](x, ...args));\n        }).catch(reject);\n      });\n    };\n  };\n  /** @type {Required<EHandler<any>>} */\n\n\n  const postponedHandler = {\n    get: makePostponedOperation('get'),\n    getSendOnly: makePostponedOperation('getSendOnly'),\n    applyFunction: makePostponedOperation('applyFunction'),\n    applyFunctionSendOnly: makePostponedOperation('applyFunctionSendOnly'),\n    applyMethod: makePostponedOperation('applyMethod'),\n    applyMethodSendOnly: makePostponedOperation('applyMethodSendOnly')\n  };\n  assert(donePostponing);\n  return [postponedHandler, donePostponing];\n};","map":{"version":3,"names":["makePostponedHandler","HandledPromise","donePostponing","interlockP","Promise","resolve","undefined","makePostponedOperation","postponedOperation","postpone","x","args","reject","then","_","catch","postponedHandler","get","getSendOnly","applyFunction","applyFunctionSendOnly","applyMethod","applyMethodSendOnly","assert"],"sources":["/Users/carlostrigoseguin/Documents/KRYHA/agoric/character-builder-repo/ui/node_modules/@endo/eventual-send/src/postponed.js"],"sourcesContent":["// @ts-check\n/// <reference types=\"ses\" />\n\n/**\n * @template T\n * @typedef {import('.').EHandler<T>} EHandler\n */\n\n/**\n * Create a simple postponedHandler that just postpones until donePostponing is\n * called.\n *\n * @param {import('.').HandledPromiseConstructor} HandledPromise\n * @returns {[Required<EHandler<any>>, () => void]} A pair consisting of the\n * postponedHandler and donePostponing callback.\n */\nexport const makePostponedHandler = HandledPromise => {\n  let donePostponing;\n  const interlockP = new Promise(resolve => {\n    donePostponing = () => resolve(undefined);\n  });\n\n  const makePostponedOperation = postponedOperation => {\n    // Just wait until the handler is resolved/rejected.\n    return function postpone(x, ...args) {\n      // console.log(`forwarding ${postponedOperation} ${args[0]}`);\n      return new HandledPromise((resolve, reject) => {\n        interlockP\n          .then(_ => {\n            resolve(HandledPromise[postponedOperation](x, ...args));\n          })\n          .catch(reject);\n      });\n    };\n  };\n\n  /** @type {Required<EHandler<any>>} */\n  const postponedHandler = {\n    get: makePostponedOperation('get'),\n    getSendOnly: makePostponedOperation('getSendOnly'),\n    applyFunction: makePostponedOperation('applyFunction'),\n    applyFunctionSendOnly: makePostponedOperation('applyFunctionSendOnly'),\n    applyMethod: makePostponedOperation('applyMethod'),\n    applyMethodSendOnly: makePostponedOperation('applyMethodSendOnly'),\n  };\n\n  assert(donePostponing);\n  return [postponedHandler, donePostponing];\n};\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,oBAAoB,GAAGC,cAAc,IAAI;EACpD,IAAIC,cAAJ;EACA,MAAMC,UAAU,GAAG,IAAIC,OAAJ,CAAYC,OAAO,IAAI;IACxCH,cAAc,GAAG,MAAMG,OAAO,CAACC,SAAD,CAA9B;EACD,CAFkB,CAAnB;;EAIA,MAAMC,sBAAsB,GAAGC,kBAAkB,IAAI;IACnD;IACA,OAAO,SAASC,QAAT,CAAkBC,CAAlB,EAA8B;MAAA,kCAANC,IAAM;QAANA,IAAM;MAAA;;MACnC;MACA,OAAO,IAAIV,cAAJ,CAAmB,CAACI,OAAD,EAAUO,MAAV,KAAqB;QAC7CT,UAAU,CACPU,IADH,CACQC,CAAC,IAAI;UACTT,OAAO,CAACJ,cAAc,CAACO,kBAAD,CAAd,CAAmCE,CAAnC,EAAsC,GAAGC,IAAzC,CAAD,CAAP;QACD,CAHH,EAIGI,KAJH,CAISH,MAJT;MAKD,CANM,CAAP;IAOD,CATD;EAUD,CAZD;EAcA;;;EACA,MAAMI,gBAAgB,GAAG;IACvBC,GAAG,EAAEV,sBAAsB,CAAC,KAAD,CADJ;IAEvBW,WAAW,EAAEX,sBAAsB,CAAC,aAAD,CAFZ;IAGvBY,aAAa,EAAEZ,sBAAsB,CAAC,eAAD,CAHd;IAIvBa,qBAAqB,EAAEb,sBAAsB,CAAC,uBAAD,CAJtB;IAKvBc,WAAW,EAAEd,sBAAsB,CAAC,aAAD,CALZ;IAMvBe,mBAAmB,EAAEf,sBAAsB,CAAC,qBAAD;EANpB,CAAzB;EASAgB,MAAM,CAACrB,cAAD,CAAN;EACA,OAAO,CAACc,gBAAD,EAAmBd,cAAnB,CAAP;AACD,CAhCM"},"metadata":{},"sourceType":"module"}