{"ast":null,"code":"import { FERAL_FUNCTION, Float32Array, Map, Set, String, getOwnPropertyDescriptor, getPrototypeOf, iterateArray, iterateMap, iterateSet, iterateString, matchAllRegExp, matchAllSymbol, regexpPrototype } from './commons.js';\nimport { InertCompartment } from './compartment-shim.js';\n/**\n * Object.getConstructorOf()\n * Helper function to improve readability, similar to Object.getPrototypeOf().\n *\n * @param {Object} obj\n */\n\nfunction getConstructorOf(obj) {\n  return getPrototypeOf(obj).constructor;\n} // getAnonymousIntrinsics uses a utility function to construct an arguments\n// object, since it cannot have one of its own and also be a const export.\n\n\nfunction makeArguments() {\n  // eslint-disable-next-line prefer-rest-params\n  return arguments;\n}\n/**\n * getAnonymousIntrinsics()\n * Get the intrinsics not otherwise reachable by named own property\n * traversal from the global object.\n *\n * @returns {Object}\n */\n\n\nexport const getAnonymousIntrinsics = () => {\n  const InertFunction = FERAL_FUNCTION.prototype.constructor; // 9.2.4.1 %ThrowTypeError%\n\n  const ThrowTypeError = getOwnPropertyDescriptor(makeArguments(), 'callee').get; // 21.1.5.2 The %StringIteratorPrototype% Object\n  // eslint-disable-next-line no-new-wrappers\n\n  const StringIteratorObject = iterateString(new String());\n  const StringIteratorPrototype = getPrototypeOf(StringIteratorObject); // 21.2.7.1 The %RegExpStringIteratorPrototype% Object\n\n  const RegExpStringIterator = regexpPrototype[matchAllSymbol] && matchAllRegExp(/./);\n  const RegExpStringIteratorPrototype = RegExpStringIterator && getPrototypeOf(RegExpStringIterator); // 22.1.5.2 The %ArrayIteratorPrototype% Object\n  // eslint-disable-next-line no-array-constructor\n\n  const ArrayIteratorObject = iterateArray([]);\n  const ArrayIteratorPrototype = getPrototypeOf(ArrayIteratorObject); // 22.2.1 The %TypedArray% Intrinsic Object\n\n  const TypedArray = getPrototypeOf(Float32Array); // 23.1.5.2 The %MapIteratorPrototype% Object\n\n  const MapIteratorObject = iterateMap(new Map());\n  const MapIteratorPrototype = getPrototypeOf(MapIteratorObject); // 23.2.5.2 The %SetIteratorPrototype% Object\n\n  const SetIteratorObject = iterateSet(new Set());\n  const SetIteratorPrototype = getPrototypeOf(SetIteratorObject); // 25.1.2 The %IteratorPrototype% Object\n\n  const IteratorPrototype = getPrototypeOf(ArrayIteratorPrototype); // 25.2.1 The GeneratorFunction Constructor\n  // eslint-disable-next-line no-empty-function\n\n  function* GeneratorFunctionInstance() {}\n\n  const GeneratorFunction = getConstructorOf(GeneratorFunctionInstance); // 25.2.3 Properties of the GeneratorFunction Prototype Object\n\n  const Generator = GeneratorFunction.prototype; // 25.3.1 The AsyncGeneratorFunction Constructor\n  // eslint-disable-next-line no-empty-function\n\n  async function* AsyncGeneratorFunctionInstance() {}\n\n  const AsyncGeneratorFunction = getConstructorOf(AsyncGeneratorFunctionInstance); // 25.3.2.2 AsyncGeneratorFunction.prototype\n\n  const AsyncGenerator = AsyncGeneratorFunction.prototype; // 25.5.1 Properties of the AsyncGenerator Prototype Object\n\n  const AsyncGeneratorPrototype = AsyncGenerator.prototype;\n  const AsyncIteratorPrototype = getPrototypeOf(AsyncGeneratorPrototype); // 25.7.1 The AsyncFunction Constructor\n  // eslint-disable-next-line no-empty-function\n\n  async function AsyncFunctionInstance() {}\n\n  const AsyncFunction = getConstructorOf(AsyncFunctionInstance);\n  const intrinsics = {\n    '%InertFunction%': InertFunction,\n    '%ArrayIteratorPrototype%': ArrayIteratorPrototype,\n    '%InertAsyncFunction%': AsyncFunction,\n    '%AsyncGenerator%': AsyncGenerator,\n    '%InertAsyncGeneratorFunction%': AsyncGeneratorFunction,\n    '%AsyncGeneratorPrototype%': AsyncGeneratorPrototype,\n    '%AsyncIteratorPrototype%': AsyncIteratorPrototype,\n    '%Generator%': Generator,\n    '%InertGeneratorFunction%': GeneratorFunction,\n    '%IteratorPrototype%': IteratorPrototype,\n    '%MapIteratorPrototype%': MapIteratorPrototype,\n    '%RegExpStringIteratorPrototype%': RegExpStringIteratorPrototype,\n    '%SetIteratorPrototype%': SetIteratorPrototype,\n    '%StringIteratorPrototype%': StringIteratorPrototype,\n    '%ThrowTypeError%': ThrowTypeError,\n    '%TypedArray%': TypedArray,\n    '%InertCompartment%': InertCompartment\n  };\n  return intrinsics;\n};","map":{"version":3,"names":["FERAL_FUNCTION","Float32Array","Map","Set","String","getOwnPropertyDescriptor","getPrototypeOf","iterateArray","iterateMap","iterateSet","iterateString","matchAllRegExp","matchAllSymbol","regexpPrototype","InertCompartment","getConstructorOf","obj","constructor","makeArguments","arguments","getAnonymousIntrinsics","InertFunction","prototype","ThrowTypeError","get","StringIteratorObject","StringIteratorPrototype","RegExpStringIterator","RegExpStringIteratorPrototype","ArrayIteratorObject","ArrayIteratorPrototype","TypedArray","MapIteratorObject","MapIteratorPrototype","SetIteratorObject","SetIteratorPrototype","IteratorPrototype","GeneratorFunctionInstance","GeneratorFunction","Generator","AsyncGeneratorFunctionInstance","AsyncGeneratorFunction","AsyncGenerator","AsyncGeneratorPrototype","AsyncIteratorPrototype","AsyncFunctionInstance","AsyncFunction","intrinsics"],"sources":["/Users/carlostrigoseguin/Documents/KRYHA/agoric/character-builder-repo/ui/node_modules/ses/src/get-anonymous-intrinsics.js"],"sourcesContent":["import {\n  FERAL_FUNCTION,\n  Float32Array,\n  Map,\n  Set,\n  String,\n  getOwnPropertyDescriptor,\n  getPrototypeOf,\n  iterateArray,\n  iterateMap,\n  iterateSet,\n  iterateString,\n  matchAllRegExp,\n  matchAllSymbol,\n  regexpPrototype,\n} from './commons.js';\nimport { InertCompartment } from './compartment-shim.js';\n\n/**\n * Object.getConstructorOf()\n * Helper function to improve readability, similar to Object.getPrototypeOf().\n *\n * @param {Object} obj\n */\nfunction getConstructorOf(obj) {\n  return getPrototypeOf(obj).constructor;\n}\n\n// getAnonymousIntrinsics uses a utility function to construct an arguments\n// object, since it cannot have one of its own and also be a const export.\nfunction makeArguments() {\n  // eslint-disable-next-line prefer-rest-params\n  return arguments;\n}\n\n/**\n * getAnonymousIntrinsics()\n * Get the intrinsics not otherwise reachable by named own property\n * traversal from the global object.\n *\n * @returns {Object}\n */\nexport const getAnonymousIntrinsics = () => {\n  const InertFunction = FERAL_FUNCTION.prototype.constructor;\n\n  // 9.2.4.1 %ThrowTypeError%\n\n  const ThrowTypeError = getOwnPropertyDescriptor(makeArguments(), 'callee')\n    .get;\n\n  // 21.1.5.2 The %StringIteratorPrototype% Object\n\n  // eslint-disable-next-line no-new-wrappers\n  const StringIteratorObject = iterateString(new String());\n  const StringIteratorPrototype = getPrototypeOf(StringIteratorObject);\n\n  // 21.2.7.1 The %RegExpStringIteratorPrototype% Object\n  const RegExpStringIterator =\n    regexpPrototype[matchAllSymbol] && matchAllRegExp(/./);\n  const RegExpStringIteratorPrototype =\n    RegExpStringIterator && getPrototypeOf(RegExpStringIterator);\n\n  // 22.1.5.2 The %ArrayIteratorPrototype% Object\n\n  // eslint-disable-next-line no-array-constructor\n  const ArrayIteratorObject = iterateArray([]);\n  const ArrayIteratorPrototype = getPrototypeOf(ArrayIteratorObject);\n\n  // 22.2.1 The %TypedArray% Intrinsic Object\n\n  const TypedArray = getPrototypeOf(Float32Array);\n\n  // 23.1.5.2 The %MapIteratorPrototype% Object\n\n  const MapIteratorObject = iterateMap(new Map());\n  const MapIteratorPrototype = getPrototypeOf(MapIteratorObject);\n\n  // 23.2.5.2 The %SetIteratorPrototype% Object\n\n  const SetIteratorObject = iterateSet(new Set());\n  const SetIteratorPrototype = getPrototypeOf(SetIteratorObject);\n\n  // 25.1.2 The %IteratorPrototype% Object\n\n  const IteratorPrototype = getPrototypeOf(ArrayIteratorPrototype);\n\n  // 25.2.1 The GeneratorFunction Constructor\n\n  // eslint-disable-next-line no-empty-function\n  function* GeneratorFunctionInstance() {}\n  const GeneratorFunction = getConstructorOf(GeneratorFunctionInstance);\n\n  // 25.2.3 Properties of the GeneratorFunction Prototype Object\n\n  const Generator = GeneratorFunction.prototype;\n\n  // 25.3.1 The AsyncGeneratorFunction Constructor\n\n  // eslint-disable-next-line no-empty-function\n  async function* AsyncGeneratorFunctionInstance() {}\n  const AsyncGeneratorFunction = getConstructorOf(\n    AsyncGeneratorFunctionInstance,\n  );\n\n  // 25.3.2.2 AsyncGeneratorFunction.prototype\n  const AsyncGenerator = AsyncGeneratorFunction.prototype;\n  // 25.5.1 Properties of the AsyncGenerator Prototype Object\n  const AsyncGeneratorPrototype = AsyncGenerator.prototype;\n  const AsyncIteratorPrototype = getPrototypeOf(AsyncGeneratorPrototype);\n\n  // 25.7.1 The AsyncFunction Constructor\n\n  // eslint-disable-next-line no-empty-function\n  async function AsyncFunctionInstance() {}\n  const AsyncFunction = getConstructorOf(AsyncFunctionInstance);\n\n  const intrinsics = {\n    '%InertFunction%': InertFunction,\n    '%ArrayIteratorPrototype%': ArrayIteratorPrototype,\n    '%InertAsyncFunction%': AsyncFunction,\n    '%AsyncGenerator%': AsyncGenerator,\n    '%InertAsyncGeneratorFunction%': AsyncGeneratorFunction,\n    '%AsyncGeneratorPrototype%': AsyncGeneratorPrototype,\n    '%AsyncIteratorPrototype%': AsyncIteratorPrototype,\n    '%Generator%': Generator,\n    '%InertGeneratorFunction%': GeneratorFunction,\n    '%IteratorPrototype%': IteratorPrototype,\n    '%MapIteratorPrototype%': MapIteratorPrototype,\n    '%RegExpStringIteratorPrototype%': RegExpStringIteratorPrototype,\n    '%SetIteratorPrototype%': SetIteratorPrototype,\n    '%StringIteratorPrototype%': StringIteratorPrototype,\n    '%ThrowTypeError%': ThrowTypeError,\n    '%TypedArray%': TypedArray,\n    '%InertCompartment%': InertCompartment,\n  };\n\n  return intrinsics;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}