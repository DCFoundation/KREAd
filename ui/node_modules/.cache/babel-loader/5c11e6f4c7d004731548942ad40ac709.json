{"ast":null,"code":"import { Far } from '@endo/marshal';\nimport { E, makeCapTP } from './captp.js';\nimport { nearTrapImpl } from './trap.js';\nexport { E };\n/**\n * @template T\n * @typedef {import('@endo/eventual-send').ERef<T>} ERef\n */\n\n/**\n * Create an async-isolated channel to an object.\n *\n * @param {string} ourId\n * @returns {{\n *   makeFar<T>(x: T): ERef<T>,\n *   makeNear<T>(x: T): ERef<T>,\n *   makeTrapHandler<T>(x: T): T,\n *   Trap: Trap\n * }}\n */\n\nexport const makeLoopback = ourId => {\n  let nextNonce = 0;\n  const nonceToRef = new Map();\n  const bootstrap = harden({\n    refGetter: Far('refGetter', {\n      getRef(nonce) {\n        // Find the local ref for the specified nonce.\n        const xFar = nonceToRef.get(nonce);\n        nonceToRef.delete(nonce);\n        return xFar;\n      }\n\n    })\n  });\n  const slotBody = JSON.stringify({\n    '@qclass': 'slot',\n    index: 0\n  }); // Create the tunnel.\n\n  const {\n    Trap,\n    dispatch: nearDispatch,\n    getBootstrap: getFarBootstrap // eslint-disable-next-line no-use-before-define\n\n  } = makeCapTP(`near-${ourId}`, o => farDispatch(o), bootstrap, {\n    trapGuest: _ref => {\n      let {\n        trapMethod,\n        slot,\n        trapArgs\n      } = _ref;\n      let value;\n      let isException = false;\n\n      try {\n        // Cross the boundary to pull out the far object.\n        // eslint-disable-next-line no-use-before-define\n        const far = farUnserialize({\n          body: slotBody,\n          slots: [slot]\n        });\n        value = nearTrapImpl[trapMethod](far, trapArgs[0], trapArgs[1]);\n      } catch (e) {\n        isException = true;\n        value = e;\n      }\n\n      harden(value); // eslint-disable-next-line no-use-before-define\n\n      return [isException, farSerialize(value)];\n    }\n  });\n  assert(Trap);\n  const {\n    makeTrapHandler,\n    dispatch: farDispatch,\n    getBootstrap: getNearBootstrap,\n    unserialize: farUnserialize,\n    serialize: farSerialize\n  } = makeCapTP(`far-${ourId}`, nearDispatch, bootstrap);\n  const farGetter = E.get(getFarBootstrap()).refGetter;\n  const nearGetter = E.get(getNearBootstrap()).refGetter;\n  /**\n   * @param {ERef<{ getRef(nonce: number): any }>} refGetter\n   */\n\n  const makeRefMaker = refGetter =>\n  /**\n   * @param {any} x\n   */\n  async x => {\n    const myNonce = nextNonce;\n    nextNonce += 1;\n    nonceToRef.set(myNonce, harden(x));\n    return E(refGetter).getRef(myNonce);\n  };\n\n  return {\n    makeFar: makeRefMaker(farGetter),\n    makeNear: makeRefMaker(nearGetter),\n    makeTrapHandler,\n    Trap\n  };\n};","map":{"version":3,"names":["Far","E","makeCapTP","nearTrapImpl","makeLoopback","ourId","nextNonce","nonceToRef","Map","bootstrap","harden","refGetter","getRef","nonce","xFar","get","delete","slotBody","JSON","stringify","index","Trap","dispatch","nearDispatch","getBootstrap","getFarBootstrap","o","farDispatch","trapGuest","trapMethod","slot","trapArgs","value","isException","far","farUnserialize","body","slots","e","farSerialize","assert","makeTrapHandler","getNearBootstrap","unserialize","serialize","farGetter","nearGetter","makeRefMaker","x","myNonce","set","makeFar","makeNear"],"sources":["/Users/carlostrigoseguin/Documents/KRYHA/agoric/character-builder-repo/ui/node_modules/@endo/captp/src/loopback.js"],"sourcesContent":["import { Far } from '@endo/marshal';\nimport { E, makeCapTP } from './captp.js';\nimport { nearTrapImpl } from './trap.js';\n\nexport { E };\n\n/**\n * @template T\n * @typedef {import('@endo/eventual-send').ERef<T>} ERef\n */\n\n/**\n * Create an async-isolated channel to an object.\n *\n * @param {string} ourId\n * @returns {{\n *   makeFar<T>(x: T): ERef<T>,\n *   makeNear<T>(x: T): ERef<T>,\n *   makeTrapHandler<T>(x: T): T,\n *   Trap: Trap\n * }}\n */\nexport const makeLoopback = ourId => {\n  let nextNonce = 0;\n  const nonceToRef = new Map();\n\n  const bootstrap = harden({\n    refGetter: Far('refGetter', {\n      getRef(nonce) {\n        // Find the local ref for the specified nonce.\n        const xFar = nonceToRef.get(nonce);\n        nonceToRef.delete(nonce);\n        return xFar;\n      },\n    }),\n  });\n\n  const slotBody = JSON.stringify({\n    '@qclass': 'slot',\n    index: 0,\n  });\n\n  // Create the tunnel.\n  const {\n    Trap,\n    dispatch: nearDispatch,\n    getBootstrap: getFarBootstrap,\n    // eslint-disable-next-line no-use-before-define\n  } = makeCapTP(`near-${ourId}`, o => farDispatch(o), bootstrap, {\n    trapGuest: ({ trapMethod, slot, trapArgs }) => {\n      let value;\n      let isException = false;\n      try {\n        // Cross the boundary to pull out the far object.\n        // eslint-disable-next-line no-use-before-define\n        const far = farUnserialize({ body: slotBody, slots: [slot] });\n        value = nearTrapImpl[trapMethod](far, trapArgs[0], trapArgs[1]);\n      } catch (e) {\n        isException = true;\n        value = e;\n      }\n      harden(value);\n      // eslint-disable-next-line no-use-before-define\n      return [isException, farSerialize(value)];\n    },\n  });\n  assert(Trap);\n\n  const {\n    makeTrapHandler,\n    dispatch: farDispatch,\n    getBootstrap: getNearBootstrap,\n    unserialize: farUnserialize,\n    serialize: farSerialize,\n  } = makeCapTP(`far-${ourId}`, nearDispatch, bootstrap);\n\n  const farGetter = E.get(getFarBootstrap()).refGetter;\n  const nearGetter = E.get(getNearBootstrap()).refGetter;\n\n  /**\n   * @param {ERef<{ getRef(nonce: number): any }>} refGetter\n   */\n  const makeRefMaker = refGetter =>\n    /**\n     * @param {any} x\n     */\n    async x => {\n      const myNonce = nextNonce;\n      nextNonce += 1;\n      nonceToRef.set(myNonce, harden(x));\n      return E(refGetter).getRef(myNonce);\n    };\n\n  return {\n    makeFar: makeRefMaker(farGetter),\n    makeNear: makeRefMaker(nearGetter),\n    makeTrapHandler,\n    Trap,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}