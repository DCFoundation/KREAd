{"ast":null,"code":"// @ts-check\n/// <reference types=\"ses\"/>\nimport { assertChecker, checkNormalProperty } from './passStyle-helpers.js';\nconst {\n  details: X\n} = assert;\nconst {\n  getPrototypeOf\n} = Object;\nconst {\n  ownKeys\n} = Reflect;\nconst {\n  isArray,\n  prototype: arrayPrototype\n} = Array;\n/**\n *\n * @type {import('./internal-types.js').PassStyleHelper}\n */\n\nexport const CopyArrayHelper = harden({\n  styleName: 'copyArray',\n  canBeValid: function (candidate) {\n    let check = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x => x;\n    return check(isArray(candidate), X`Array expected: ${candidate}`);\n  },\n  assertValid: (candidate, passStyleOfRecur) => {\n    CopyArrayHelper.canBeValid(candidate, assertChecker);\n    assert(getPrototypeOf(candidate) === arrayPrototype, X`Malformed array: ${candidate}`, TypeError); // Since we're already ensured candidate is an array, it should not be\n    // possible for the following test to fail\n\n    checkNormalProperty(candidate, 'length', 'string', false, assertChecker);\n    const len = candidate.length;\n\n    for (let i = 0; i < len; i += 1) {\n      checkNormalProperty(candidate, i, 'number', true, assertChecker);\n    }\n\n    assert( // +1 for the 'length' property itself.\n    ownKeys(candidate).length === len + 1, X`Arrays must not have non-indexes: ${candidate}`, TypeError); // Recursively validate that each member is passable.\n\n    candidate.every(v => !!passStyleOfRecur(v));\n  }\n});","map":{"version":3,"names":["assertChecker","checkNormalProperty","details","X","assert","getPrototypeOf","Object","ownKeys","Reflect","isArray","prototype","arrayPrototype","Array","CopyArrayHelper","harden","styleName","canBeValid","candidate","check","x","assertValid","passStyleOfRecur","TypeError","len","length","i","every","v"],"sources":["/Users/carlostrigoseguin/Documents/KRYHA/agoric/character-builder-repo/ui/node_modules/@endo/marshal/src/helpers/copyArray.js"],"sourcesContent":["// @ts-check\n\n/// <reference types=\"ses\"/>\n\nimport { assertChecker, checkNormalProperty } from './passStyle-helpers.js';\n\nconst { details: X } = assert;\nconst { getPrototypeOf } = Object;\nconst { ownKeys } = Reflect;\nconst { isArray, prototype: arrayPrototype } = Array;\n\n/**\n *\n * @type {import('./internal-types.js').PassStyleHelper}\n */\nexport const CopyArrayHelper = harden({\n  styleName: 'copyArray',\n\n  canBeValid: (candidate, check = x => x) =>\n    check(isArray(candidate), X`Array expected: ${candidate}`),\n\n  assertValid: (candidate, passStyleOfRecur) => {\n    CopyArrayHelper.canBeValid(candidate, assertChecker);\n    assert(\n      getPrototypeOf(candidate) === arrayPrototype,\n      X`Malformed array: ${candidate}`,\n      TypeError,\n    );\n    // Since we're already ensured candidate is an array, it should not be\n    // possible for the following test to fail\n    checkNormalProperty(candidate, 'length', 'string', false, assertChecker);\n    const len = candidate.length;\n    for (let i = 0; i < len; i += 1) {\n      checkNormalProperty(candidate, i, 'number', true, assertChecker);\n    }\n    assert(\n      // +1 for the 'length' property itself.\n      ownKeys(candidate).length === len + 1,\n      X`Arrays must not have non-indexes: ${candidate}`,\n      TypeError,\n    );\n    // Recursively validate that each member is passable.\n    candidate.every(v => !!passStyleOfRecur(v));\n  },\n});\n"],"mappings":"AAAA;AAEA;AAEA,SAASA,aAAT,EAAwBC,mBAAxB,QAAmD,wBAAnD;AAEA,MAAM;EAAEC,OAAO,EAAEC;AAAX,IAAiBC,MAAvB;AACA,MAAM;EAAEC;AAAF,IAAqBC,MAA3B;AACA,MAAM;EAAEC;AAAF,IAAcC,OAApB;AACA,MAAM;EAAEC,OAAF;EAAWC,SAAS,EAAEC;AAAtB,IAAyCC,KAA/C;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAGC,MAAM,CAAC;EACpCC,SAAS,EAAE,WADyB;EAGpCC,UAAU,EAAE,UAACC,SAAD;IAAA,IAAYC,KAAZ,uEAAoBC,CAAC,IAAIA,CAAzB;IAAA,OACVD,KAAK,CAACT,OAAO,CAACQ,SAAD,CAAR,EAAqBd,CAAE,mBAAkBc,SAAU,EAAnD,CADK;EAAA,CAHwB;EAMpCG,WAAW,EAAE,CAACH,SAAD,EAAYI,gBAAZ,KAAiC;IAC5CR,eAAe,CAACG,UAAhB,CAA2BC,SAA3B,EAAsCjB,aAAtC;IACAI,MAAM,CACJC,cAAc,CAACY,SAAD,CAAd,KAA8BN,cAD1B,EAEJR,CAAE,oBAAmBc,SAAU,EAF3B,EAGJK,SAHI,CAAN,CAF4C,CAO5C;IACA;;IACArB,mBAAmB,CAACgB,SAAD,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,KAAhC,EAAuCjB,aAAvC,CAAnB;IACA,MAAMuB,GAAG,GAAGN,SAAS,CAACO,MAAtB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,IAAI,CAA9B,EAAiC;MAC/BxB,mBAAmB,CAACgB,SAAD,EAAYQ,CAAZ,EAAe,QAAf,EAAyB,IAAzB,EAA+BzB,aAA/B,CAAnB;IACD;;IACDI,MAAM,EACJ;IACAG,OAAO,CAACU,SAAD,CAAP,CAAmBO,MAAnB,KAA8BD,GAAG,GAAG,CAFhC,EAGJpB,CAAE,qCAAoCc,SAAU,EAH5C,EAIJK,SAJI,CAAN,CAd4C,CAoB5C;;IACAL,SAAS,CAACS,KAAV,CAAgBC,CAAC,IAAI,CAAC,CAACN,gBAAgB,CAACM,CAAD,CAAvC;EACD;AA5BmC,CAAD,CAA9B"},"metadata":{},"sourceType":"module"}