{"ast":null,"code":"// @ts-check\nimport { Date, TypeError, apply, construct, defineProperties } from './commons.js';\nexport default function tameDateConstructor() {\n  let dateTaming = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'safe';\n\n  if (dateTaming !== 'safe' && dateTaming !== 'unsafe') {\n    throw new TypeError(`unrecognized dateTaming ${dateTaming}`);\n  }\n\n  const OriginalDate = Date;\n  const DatePrototype = OriginalDate.prototype; // Use concise methods to obtain named functions without constructors.\n\n  const tamedMethods = {\n    now() {\n      return NaN;\n    }\n\n  }; // Tame the Date constructor.\n  // Common behavior\n  //   * new Date(x) coerces x into a number and then returns a Date\n  //     for that number of millis since the epoch\n  //   * new Date(NaN) returns a Date object which stringifies to\n  //     'Invalid Date'\n  //   * new Date(undefined) returns a Date object which stringifies to\n  //     'Invalid Date'\n  // OriginalDate (normal standard) behavior\n  //   * Date(anything) gives a string with the current time\n  //   * new Date() returns the current time, as a Date object\n  // SharedDate behavior\n  //   * Date(anything) returned 'Invalid Date'\n  //   * new Date() returns a Date object which stringifies to\n  //     'Invalid Date'\n\n  const makeDateConstructor = function () {\n    let {\n      powers = 'none'\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let ResultDate;\n\n    if (powers === 'original') {\n      // eslint-disable-next-line no-shadow\n      ResultDate = function Date() {\n        for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n          rest[_key] = arguments[_key];\n        }\n\n        if (new.target === undefined) {\n          return apply(OriginalDate, undefined, rest);\n        }\n\n        return construct(OriginalDate, rest, new.target);\n      };\n    } else {\n      // eslint-disable-next-line no-shadow\n      ResultDate = function Date() {\n        for (var _len2 = arguments.length, rest = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          rest[_key2] = arguments[_key2];\n        }\n\n        if (new.target === undefined) {\n          return 'Invalid Date';\n        }\n\n        if (rest.length === 0) {\n          rest = [NaN];\n        }\n\n        return construct(OriginalDate, rest, new.target);\n      };\n    }\n\n    defineProperties(ResultDate, {\n      length: {\n        value: 7\n      },\n      prototype: {\n        value: DatePrototype,\n        writable: false,\n        enumerable: false,\n        configurable: false\n      },\n      parse: {\n        value: Date.parse,\n        writable: true,\n        enumerable: false,\n        configurable: true\n      },\n      UTC: {\n        value: Date.UTC,\n        writable: true,\n        enumerable: false,\n        configurable: true\n      }\n    });\n    return ResultDate;\n  };\n\n  const InitialDate = makeDateConstructor({\n    powers: 'original'\n  });\n  const SharedDate = makeDateConstructor({\n    powers: 'none'\n  });\n  defineProperties(InitialDate, {\n    now: {\n      value: Date.now,\n      writable: true,\n      enumerable: false,\n      configurable: true\n    }\n  });\n  defineProperties(SharedDate, {\n    now: {\n      value: tamedMethods.now,\n      writable: true,\n      enumerable: false,\n      configurable: true\n    }\n  });\n  defineProperties(DatePrototype, {\n    constructor: {\n      value: SharedDate\n    }\n  });\n  return {\n    '%InitialDate%': InitialDate,\n    '%SharedDate%': SharedDate\n  };\n}","map":{"version":3,"names":["Date","TypeError","apply","construct","defineProperties","tameDateConstructor","dateTaming","OriginalDate","DatePrototype","prototype","tamedMethods","now","NaN","makeDateConstructor","powers","ResultDate","rest","new","target","undefined","length","value","writable","enumerable","configurable","parse","UTC","InitialDate","SharedDate","constructor"],"sources":["/Users/carlostrigoseguin/Documents/KRYHA/agoric/character-builder-repo/ui/node_modules/ses/src/tame-date-constructor.js"],"sourcesContent":["// @ts-check\n\nimport {\n  Date,\n  TypeError,\n  apply,\n  construct,\n  defineProperties,\n} from './commons.js';\n\nexport default function tameDateConstructor(dateTaming = 'safe') {\n  if (dateTaming !== 'safe' && dateTaming !== 'unsafe') {\n    throw new TypeError(`unrecognized dateTaming ${dateTaming}`);\n  }\n  const OriginalDate = Date;\n  const DatePrototype = OriginalDate.prototype;\n\n  // Use concise methods to obtain named functions without constructors.\n  const tamedMethods = {\n    now() {\n      return NaN;\n    },\n  };\n\n  // Tame the Date constructor.\n  // Common behavior\n  //   * new Date(x) coerces x into a number and then returns a Date\n  //     for that number of millis since the epoch\n  //   * new Date(NaN) returns a Date object which stringifies to\n  //     'Invalid Date'\n  //   * new Date(undefined) returns a Date object which stringifies to\n  //     'Invalid Date'\n  // OriginalDate (normal standard) behavior\n  //   * Date(anything) gives a string with the current time\n  //   * new Date() returns the current time, as a Date object\n  // SharedDate behavior\n  //   * Date(anything) returned 'Invalid Date'\n  //   * new Date() returns a Date object which stringifies to\n  //     'Invalid Date'\n  const makeDateConstructor = ({ powers = 'none' } = {}) => {\n    let ResultDate;\n    if (powers === 'original') {\n      // eslint-disable-next-line no-shadow\n      ResultDate = function Date(...rest) {\n        if (new.target === undefined) {\n          return apply(OriginalDate, undefined, rest);\n        }\n        return construct(OriginalDate, rest, new.target);\n      };\n    } else {\n      // eslint-disable-next-line no-shadow\n      ResultDate = function Date(...rest) {\n        if (new.target === undefined) {\n          return 'Invalid Date';\n        }\n        if (rest.length === 0) {\n          rest = [NaN];\n        }\n        return construct(OriginalDate, rest, new.target);\n      };\n    }\n\n    defineProperties(ResultDate, {\n      length: { value: 7 },\n      prototype: {\n        value: DatePrototype,\n        writable: false,\n        enumerable: false,\n        configurable: false,\n      },\n      parse: {\n        value: Date.parse,\n        writable: true,\n        enumerable: false,\n        configurable: true,\n      },\n      UTC: {\n        value: Date.UTC,\n        writable: true,\n        enumerable: false,\n        configurable: true,\n      },\n    });\n    return ResultDate;\n  };\n  const InitialDate = makeDateConstructor({ powers: 'original' });\n  const SharedDate = makeDateConstructor({ powers: 'none' });\n\n  defineProperties(InitialDate, {\n    now: {\n      value: Date.now,\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    },\n  });\n  defineProperties(SharedDate, {\n    now: {\n      value: tamedMethods.now,\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    },\n  });\n\n  defineProperties(DatePrototype, {\n    constructor: { value: SharedDate },\n  });\n\n  return {\n    '%InitialDate%': InitialDate,\n    '%SharedDate%': SharedDate,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}