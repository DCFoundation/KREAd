{"ast":null,"code":"import { defineProperty, objectHasOwnProperty, entries } from './commons.js';\nimport { makeEvalFunction } from './make-eval-function.js';\nimport { makeFunctionConstructor } from './make-function-constructor.js';\nimport { constantProperties, universalPropertyNames } from './whitelist.js';\n/**\n * setGlobalObjectConstantProperties()\n * Initializes a new global object using a process similar to ECMA specifications\n * (SetDefaultGlobalBindings). This process is split between this function and\n * `setGlobalObjectMutableProperties`.\n *\n * @param {Object} globalObject\n */\n\nexport const setGlobalObjectConstantProperties = globalObject => {\n  for (const [name, constant] of entries(constantProperties)) {\n    defineProperty(globalObject, name, {\n      value: constant,\n      writable: false,\n      enumerable: false,\n      configurable: false\n    });\n  }\n};\n/**\n * setGlobalObjectMutableProperties()\n * Create new global object using a process similar to ECMA specifications\n * (portions of SetRealmGlobalObject and SetDefaultGlobalBindings).\n * `newGlobalPropertyNames` should be either `initialGlobalPropertyNames` or\n * `sharedGlobalPropertyNames`.\n *\n * @param {Object} globalObject\n * @param {Object} param1\n * @param {Object} param1.intrinsics\n * @param {Object} param1.newGlobalPropertyNames\n * @param {Function} param1.makeCompartmentConstructor\n * @param {(Object) => void} param1.markVirtualizedNativeFunction\n */\n\nexport const setGlobalObjectMutableProperties = (globalObject, _ref) => {\n  let {\n    intrinsics,\n    newGlobalPropertyNames,\n    makeCompartmentConstructor,\n    markVirtualizedNativeFunction\n  } = _ref;\n\n  for (const [name, intrinsicName] of entries(universalPropertyNames)) {\n    if (objectHasOwnProperty(intrinsics, intrinsicName)) {\n      defineProperty(globalObject, name, {\n        value: intrinsics[intrinsicName],\n        writable: true,\n        enumerable: false,\n        configurable: true\n      });\n    }\n  }\n\n  for (const [name, intrinsicName] of entries(newGlobalPropertyNames)) {\n    if (objectHasOwnProperty(intrinsics, intrinsicName)) {\n      defineProperty(globalObject, name, {\n        value: intrinsics[intrinsicName],\n        writable: true,\n        enumerable: false,\n        configurable: true\n      });\n    }\n  }\n\n  const perCompartmentGlobals = {\n    globalThis: globalObject\n  };\n  perCompartmentGlobals.Compartment = makeCompartmentConstructor(makeCompartmentConstructor, intrinsics, markVirtualizedNativeFunction); // TODO These should still be tamed according to the whitelist before\n  // being made available.\n\n  for (const [name, value] of entries(perCompartmentGlobals)) {\n    defineProperty(globalObject, name, {\n      value,\n      writable: true,\n      enumerable: false,\n      configurable: true\n    });\n\n    if (typeof value === 'function') {\n      markVirtualizedNativeFunction(value);\n    }\n  }\n};\n/**\n * setGlobalObjectEvaluators()\n * Set the eval and the Function evaluator on the global object with given evalTaming policy.\n *\n * @param {Object} globalObject\n * @param {Function} evaluator\n * @param {(Object) => void} markVirtualizedNativeFunction\n */\n\nexport const setGlobalObjectEvaluators = (globalObject, evaluator, markVirtualizedNativeFunction) => {\n  {\n    const f = makeEvalFunction(evaluator);\n    markVirtualizedNativeFunction(f);\n    defineProperty(globalObject, 'eval', {\n      value: f,\n      writable: true,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  {\n    const f = makeFunctionConstructor(evaluator);\n    markVirtualizedNativeFunction(f);\n    defineProperty(globalObject, 'Function', {\n      value: f,\n      writable: true,\n      enumerable: false,\n      configurable: true\n    });\n  }\n};","map":{"version":3,"names":["defineProperty","objectHasOwnProperty","entries","makeEvalFunction","makeFunctionConstructor","constantProperties","universalPropertyNames","setGlobalObjectConstantProperties","globalObject","name","constant","value","writable","enumerable","configurable","setGlobalObjectMutableProperties","intrinsics","newGlobalPropertyNames","makeCompartmentConstructor","markVirtualizedNativeFunction","intrinsicName","perCompartmentGlobals","globalThis","Compartment","setGlobalObjectEvaluators","evaluator","f"],"sources":["/Users/carlostrigoseguin/Documents/KRYHA/agoric/character-builder-repo/ui/node_modules/ses/src/global-object.js"],"sourcesContent":["import { defineProperty, objectHasOwnProperty, entries } from './commons.js';\nimport { makeEvalFunction } from './make-eval-function.js';\nimport { makeFunctionConstructor } from './make-function-constructor.js';\nimport { constantProperties, universalPropertyNames } from './whitelist.js';\n\n/**\n * setGlobalObjectConstantProperties()\n * Initializes a new global object using a process similar to ECMA specifications\n * (SetDefaultGlobalBindings). This process is split between this function and\n * `setGlobalObjectMutableProperties`.\n *\n * @param {Object} globalObject\n */\nexport const setGlobalObjectConstantProperties = globalObject => {\n  for (const [name, constant] of entries(constantProperties)) {\n    defineProperty(globalObject, name, {\n      value: constant,\n      writable: false,\n      enumerable: false,\n      configurable: false,\n    });\n  }\n};\n\n/**\n * setGlobalObjectMutableProperties()\n * Create new global object using a process similar to ECMA specifications\n * (portions of SetRealmGlobalObject and SetDefaultGlobalBindings).\n * `newGlobalPropertyNames` should be either `initialGlobalPropertyNames` or\n * `sharedGlobalPropertyNames`.\n *\n * @param {Object} globalObject\n * @param {Object} param1\n * @param {Object} param1.intrinsics\n * @param {Object} param1.newGlobalPropertyNames\n * @param {Function} param1.makeCompartmentConstructor\n * @param {(Object) => void} param1.markVirtualizedNativeFunction\n */\nexport const setGlobalObjectMutableProperties = (\n  globalObject,\n  {\n    intrinsics,\n    newGlobalPropertyNames,\n    makeCompartmentConstructor,\n    markVirtualizedNativeFunction,\n  },\n) => {\n  for (const [name, intrinsicName] of entries(universalPropertyNames)) {\n    if (objectHasOwnProperty(intrinsics, intrinsicName)) {\n      defineProperty(globalObject, name, {\n        value: intrinsics[intrinsicName],\n        writable: true,\n        enumerable: false,\n        configurable: true,\n      });\n    }\n  }\n\n  for (const [name, intrinsicName] of entries(newGlobalPropertyNames)) {\n    if (objectHasOwnProperty(intrinsics, intrinsicName)) {\n      defineProperty(globalObject, name, {\n        value: intrinsics[intrinsicName],\n        writable: true,\n        enumerable: false,\n        configurable: true,\n      });\n    }\n  }\n\n  const perCompartmentGlobals = {\n    globalThis: globalObject,\n  };\n\n  perCompartmentGlobals.Compartment = makeCompartmentConstructor(\n    makeCompartmentConstructor,\n    intrinsics,\n    markVirtualizedNativeFunction,\n  );\n\n  // TODO These should still be tamed according to the whitelist before\n  // being made available.\n  for (const [name, value] of entries(perCompartmentGlobals)) {\n    defineProperty(globalObject, name, {\n      value,\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    });\n    if (typeof value === 'function') {\n      markVirtualizedNativeFunction(value);\n    }\n  }\n};\n\n/**\n * setGlobalObjectEvaluators()\n * Set the eval and the Function evaluator on the global object with given evalTaming policy.\n *\n * @param {Object} globalObject\n * @param {Function} evaluator\n * @param {(Object) => void} markVirtualizedNativeFunction\n */\nexport const setGlobalObjectEvaluators = (\n  globalObject,\n  evaluator,\n  markVirtualizedNativeFunction,\n) => {\n  {\n    const f = makeEvalFunction(evaluator);\n    markVirtualizedNativeFunction(f);\n    defineProperty(globalObject, 'eval', {\n      value: f,\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    });\n  }\n  {\n    const f = makeFunctionConstructor(evaluator);\n    markVirtualizedNativeFunction(f);\n    defineProperty(globalObject, 'Function', {\n      value: f,\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    });\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}