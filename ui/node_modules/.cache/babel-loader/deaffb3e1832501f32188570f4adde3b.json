{"ast":null,"code":"// @ts-check\n/// <reference types=\"ses\"/>\nimport { assertChecker, canBeMethod, checkNormalProperty } from './passStyle-helpers.js';\nconst {\n  details: X\n} = assert;\nconst {\n  ownKeys\n} = Reflect;\nconst {\n  getPrototypeOf,\n  getOwnPropertyDescriptors,\n  prototype: objectPrototype\n} = Object;\n/**\n *\n * @type {import('./internal-types.js').PassStyleHelper}\n */\n\nexport const CopyRecordHelper = harden({\n  styleName: 'copyRecord',\n  canBeValid: function (candidate) {\n    let check = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x => x;\n    const proto = getPrototypeOf(candidate);\n\n    if (proto !== objectPrototype && proto !== null) {\n      return check(false, X`Unexpected prototype for: ${candidate}`);\n    }\n\n    const descs = getOwnPropertyDescriptors(candidate);\n    const descKeys = ownKeys(descs);\n\n    for (const descKey of descKeys) {\n      if (typeof descKey !== 'string') {\n        // Pass by copy\n        return check(false, X`Records can only have string-named own properties: ${candidate}`);\n      }\n\n      const desc = descs[descKey];\n\n      if (canBeMethod(desc.value)) {\n        return check(false, X`Records cannot contain non-far functions because they may be methods of an implicit Remotable: ${candidate}`);\n      }\n    }\n\n    return true;\n  },\n  assertValid: (candidate, passStyleOfRecur) => {\n    CopyRecordHelper.canBeValid(candidate, assertChecker);\n\n    for (const name of ownKeys(candidate)) {\n      checkNormalProperty(candidate, name, 'string', true, assertChecker);\n    } // Recursively validate that each member is passable.\n\n\n    Object.values(candidate).every(v => !!passStyleOfRecur(v));\n  }\n});","map":{"version":3,"names":["assertChecker","canBeMethod","checkNormalProperty","details","X","assert","ownKeys","Reflect","getPrototypeOf","getOwnPropertyDescriptors","prototype","objectPrototype","Object","CopyRecordHelper","harden","styleName","canBeValid","candidate","check","x","proto","descs","descKeys","descKey","desc","value","assertValid","passStyleOfRecur","name","values","every","v"],"sources":["/Users/carlostrigoseguin/Documents/KRYHA/agoric/character-builder-repo/ui/node_modules/@endo/marshal/src/helpers/copyRecord.js"],"sourcesContent":["// @ts-check\n\n/// <reference types=\"ses\"/>\n\nimport {\n  assertChecker,\n  canBeMethod,\n  checkNormalProperty,\n} from './passStyle-helpers.js';\n\nconst { details: X } = assert;\nconst { ownKeys } = Reflect;\nconst {\n  getPrototypeOf,\n  getOwnPropertyDescriptors,\n  prototype: objectPrototype,\n} = Object;\n\n/**\n *\n * @type {import('./internal-types.js').PassStyleHelper}\n */\nexport const CopyRecordHelper = harden({\n  styleName: 'copyRecord',\n\n  canBeValid: (candidate, check = x => x) => {\n    const proto = getPrototypeOf(candidate);\n    if (proto !== objectPrototype && proto !== null) {\n      return check(false, X`Unexpected prototype for: ${candidate}`);\n    }\n    const descs = getOwnPropertyDescriptors(candidate);\n    const descKeys = ownKeys(descs);\n\n    for (const descKey of descKeys) {\n      if (typeof descKey !== 'string') {\n        // Pass by copy\n        return check(\n          false,\n          X`Records can only have string-named own properties: ${candidate}`,\n        );\n      }\n      const desc = descs[descKey];\n      if (canBeMethod(desc.value)) {\n        return check(\n          false,\n          X`Records cannot contain non-far functions because they may be methods of an implicit Remotable: ${candidate}`,\n        );\n      }\n    }\n    return true;\n  },\n\n  assertValid: (candidate, passStyleOfRecur) => {\n    CopyRecordHelper.canBeValid(candidate, assertChecker);\n    for (const name of ownKeys(candidate)) {\n      checkNormalProperty(candidate, name, 'string', true, assertChecker);\n    }\n    // Recursively validate that each member is passable.\n    Object.values(candidate).every(v => !!passStyleOfRecur(v));\n  },\n});\n"],"mappings":"AAAA;AAEA;AAEA,SACEA,aADF,EAEEC,WAFF,EAGEC,mBAHF,QAIO,wBAJP;AAMA,MAAM;EAAEC,OAAO,EAAEC;AAAX,IAAiBC,MAAvB;AACA,MAAM;EAAEC;AAAF,IAAcC,OAApB;AACA,MAAM;EACJC,cADI;EAEJC,yBAFI;EAGJC,SAAS,EAAEC;AAHP,IAIFC,MAJJ;AAMA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAGC,MAAM,CAAC;EACrCC,SAAS,EAAE,YAD0B;EAGrCC,UAAU,EAAE,UAACC,SAAD,EAA+B;IAAA,IAAnBC,KAAmB,uEAAXC,CAAC,IAAIA,CAAM;IACzC,MAAMC,KAAK,GAAGZ,cAAc,CAACS,SAAD,CAA5B;;IACA,IAAIG,KAAK,KAAKT,eAAV,IAA6BS,KAAK,KAAK,IAA3C,EAAiD;MAC/C,OAAOF,KAAK,CAAC,KAAD,EAAQd,CAAE,6BAA4Ba,SAAU,EAAhD,CAAZ;IACD;;IACD,MAAMI,KAAK,GAAGZ,yBAAyB,CAACQ,SAAD,CAAvC;IACA,MAAMK,QAAQ,GAAGhB,OAAO,CAACe,KAAD,CAAxB;;IAEA,KAAK,MAAME,OAAX,IAAsBD,QAAtB,EAAgC;MAC9B,IAAI,OAAOC,OAAP,KAAmB,QAAvB,EAAiC;QAC/B;QACA,OAAOL,KAAK,CACV,KADU,EAEVd,CAAE,sDAAqDa,SAAU,EAFvD,CAAZ;MAID;;MACD,MAAMO,IAAI,GAAGH,KAAK,CAACE,OAAD,CAAlB;;MACA,IAAItB,WAAW,CAACuB,IAAI,CAACC,KAAN,CAAf,EAA6B;QAC3B,OAAOP,KAAK,CACV,KADU,EAEVd,CAAE,kGAAiGa,SAAU,EAFnG,CAAZ;MAID;IACF;;IACD,OAAO,IAAP;EACD,CA5BoC;EA8BrCS,WAAW,EAAE,CAACT,SAAD,EAAYU,gBAAZ,KAAiC;IAC5Cd,gBAAgB,CAACG,UAAjB,CAA4BC,SAA5B,EAAuCjB,aAAvC;;IACA,KAAK,MAAM4B,IAAX,IAAmBtB,OAAO,CAACW,SAAD,CAA1B,EAAuC;MACrCf,mBAAmB,CAACe,SAAD,EAAYW,IAAZ,EAAkB,QAAlB,EAA4B,IAA5B,EAAkC5B,aAAlC,CAAnB;IACD,CAJ2C,CAK5C;;;IACAY,MAAM,CAACiB,MAAP,CAAcZ,SAAd,EAAyBa,KAAzB,CAA+BC,CAAC,IAAI,CAAC,CAACJ,gBAAgB,CAACI,CAAD,CAAtD;EACD;AArCoC,CAAD,CAA/B"},"metadata":{},"sourceType":"module"}